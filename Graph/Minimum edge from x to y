#include<bits/stdc++.h>
using namespace std;
#define pb push_back

bool vis[1003];
vector<int>v[1003];
int from[1003];
queue<int>q;
void bfs(int s,int y)
{
    q.push(s);
    vis[s]=1;
    while(!q.empty())
    {
        int u = q.front();
        q.pop();
        vis[u]=1;
        for(int i = 0 ; i<v[u].size() ; i++)
        {
            if(!vis[v[u][i]])
            {
                q.push(v[u][i]);
                vis[v[u][i]]=1;
                from[v[u][i]] = u;
                if(v[u][i] == y) return;
            }
        }
    }

}
int main()
{
    int n,m,t,c,x,y;
    cin >> n >> m >> t >> c;
    while(m--)
    {
        cin >> x >> y;
        v[x].pb(y);
        v[y].pb(x);
    }
    for(int i = 1 ; i<=n ; i++) sort(all(v[i])); //Making it lexicographically minimum
    cin >> x >> y;
    bfs(x,y);
    t = y;
    vector<int> nodes;
    while(t!=x)
    {
        nodes.pb(t);
        t = from[t];
    }
    cout << nodes.size()+1 << endl;
    cout << x <<" ";
    for(int i = nodes.size()-1 ; i>=0 ; i--) cout << nodes[i] << " ";

    return 0;
}
